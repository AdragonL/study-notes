{"version":3,"file":"index.cjs","sources":["../../packages/main/index.ts"],"sourcesContent":["/*\r\n * @Author: DragonL\r\n * @Date: 2022-06-10 16:15:39\r\n * @LastEditors: DragonL\r\n * @LastEditTime: 2022-06-28 16:51:43\r\n * @Description: \r\n */\r\nimport { app, BrowserWindow, shell, ipcMain, desktopCapturer } from 'electron'\r\nimport { release } from 'os'\r\n// import { getScreenStream } from \"./util\"\r\nimport { join } from 'path'\r\nconst robot = require(\"robotjs\")\r\n// Disable GPU Acceleration for Windows 7\r\nif (release().startsWith('6.1')) app.disableHardwareAcceleration()\r\nconsole.warn(process.versions.node, \"node\")\r\n// Set application name for Windows 10+ notifications\r\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\r\n\r\nif (!app.requestSingleInstanceLock()) {\r\n  app.quit()\r\n  process.exit(0)\r\n}\r\nprocess.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\r\n\r\nlet win: BrowserWindow | null = null\r\n\r\n\r\n\r\n\r\nasync function createWindow() {\r\n  const { screen } = require('electron')\r\n  const primaryDisplay = screen.getPrimaryDisplay()\r\n  const { width, height } = primaryDisplay.workAreaSize\r\n  win = new BrowserWindow({\r\n    title: 'Main window',\r\n    width: 400,\r\n    height: 400,\r\n    webPreferences: {\r\n      preload: join(__dirname, '../preload/index.cjs'),\r\n      nodeIntegration: true,\r\n      // webSecurity: false,\r\n      // enableRemoteModule:true,\r\n      // enableRemoteModule: true,\r\n      contextIsolation: false,\r\n    },\r\n  })\r\n\r\n  if (app.isPackaged) {\r\n    win.loadFile(join(__dirname, '../renderer/index.html'))\r\n\r\n  } else {\r\n    // 🚧 Use ['ENV_NAME'] avoid vite:define plugin\r\n    // const url = `http://${process.env['VITE_DEV_SERVER_HOST']}:${process.env['VITE_DEV_SERVER_PORT']}`\r\n    const url = `http://localhost:${process.env['VITE_DEV_SERVER_PORT']}`\r\n    win.loadURL(url)\r\n\r\n    // win.webContents.openDevTools()\r\n  }\r\n\r\n  win?.webContents.on('did-start-loading', async () => {\r\n\r\n  })\r\n  win?.webContents.on('dom-ready', async () => {\r\n    console.log(\"dom-ready\")\r\n\r\n    //一个框架中的文本加载完成后触发该事件。\r\n  })\r\n  // Test active push message to Renderer-process\r\n  win?.webContents.on('did-finish-load', async () => {\r\n    const sources = await desktopCapturer.getSources({ types: [\"screen\"] });\r\n    // for (let source of sources) {\r\n    console.warn(win?.webContents.send)\r\n    win?.webContents.send('SET_SOURCE', sources[0].id)\r\n    // }\r\n    win?.webContents.send('main-process-message', process.versions)\r\n  })\r\n  // Make all links open with the browser, not with the application\r\n  // win.webContents.setWindowOpenHandler(({ url }) => {\r\n  //   console.warn(url,\"url\")\r\n  //   if (url.startsWith('https:')) shell.openExternal(url)\r\n  //   return { action: 'deny' }\r\n  // })\r\n}\r\n\r\napp.whenReady().then(createWindow)\r\n\r\napp.on('window-all-closed', () => {\r\n  win = null\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n\r\napp.on('second-instance', () => {\r\n  if (win) {\r\n    // Focus on the main window if the user tried to open another\r\n    if (win.isMinimized()) win.restore()\r\n    win.focus()\r\n  }\r\n})\r\n\r\napp.on('activate', () => {\r\n  const allWindows = BrowserWindow.getAllWindows()\r\n  console.warn(1)\r\n  if (allWindows.length) {\r\n    allWindows[0].focus()\r\n  } else {\r\n    createWindow()\r\n  }\r\n\r\n})\r\n\r\n// new window example arg: new windows url\r\n// ipcMain.handle(\"open-win\", (event, arg) => {\r\n//   console.warn('open-win')\r\n//   const childWindow = new BrowserWindow({\r\n//     webPreferences: {\r\n//       preload: join(__dirname, \"../preload/index.cjs\"),\r\n//     },\r\n//   });\r\n\r\n//   if (app.isPackaged) {\r\n//     childWindow.loadFile(join(__dirname, `../renderer/index.html`), {\r\n//       hash: `${arg}`,\r\n//     })\r\n//   } else {\r\n//     // 🚧 Use ['ENV_NAME'] avoid vite:define plugin\r\n//     // const url = `http://${process.env[\"VITE_DEV_SERVER_HOST\"]}:${process.env[\"VITE_DEV_SERVER_PORT\"]}/#${arg}`\r\n//     const url = `http://localhost:${process.env['VITE_DEV_SERVER_PORT']}`\r\n//     childWindow.loadURL(url);\r\n//     // childWindow.webContents.openDevTools({ mode: \"undocked\", activate: true })\r\n//   }\r\n// });\r\n\r\nipcMain.on(\"robot\", (event, arg) => {\r\n  console.warn(arg)\r\n  let { x, y, type } = arg\r\n  robot.moveMouse(x, y)\r\n  if (type === \"click\") {\r\n    robot.mouseClick()\r\n  }\r\n})\r\n\r\nipcMain.on(\"open_new_win\", (event, arg) => {\r\n  const win = new BrowserWindow({\r\n    title: 'Main window',\r\n    width: 800,\r\n    height: 400,\r\n    webPreferences: {\r\n      preload: join(__dirname, '../preload/index.cjs'),\r\n      nodeIntegration: true,\r\n      webSecurity: false,\r\n      // enableRemoteModule: true,\r\n      contextIsolation: false,\r\n    },\r\n  })\r\n\r\n  if (app.isPackaged) {\r\n    win.loadFile(join(__dirname, '../renderer/index.html'))\r\n\r\n  } else {\r\n    // 🚧 Use ['ENV_NAME'] avoid vite:define plugin\r\n    const url = `http://${process.env['VITE_DEV_SERVER_HOST']}:${process.env['VITE_DEV_SERVER_PORT']}`\r\n    // const url = `http://localhost:${process.env['VITE_DEV_SERVER_PORT']}`\r\n\r\n    win.loadURL(url)\r\n  }\r\n  win?.webContents.on('did-finish-load', async () => {\r\n    const sources = await desktopCapturer.getSources({ types: [\"screen\"], thumbnailSize: { width: 0, height: 0 } });\r\n    // for (let source of sources) {\r\n    // console.warn(win?.webContents.send)\r\n    win?.webContents.send('SET_SOURCE', sources[0].id)\r\n    // }\r\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\r\n  })\r\n});\r\n\r\n\r\n\r\n"],"names":["release","app","BrowserWindow","join","desktopCapturer","ipcMain"],"mappings":"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"}